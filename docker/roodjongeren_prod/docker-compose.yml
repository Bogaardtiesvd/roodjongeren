version: '3.9'
services:
  postgres:
    container_name: rood_postgres
    image: postgres:14.1
    restart: unless-stopped
    environment:
      - POSTGRES_USER=$DATABASE_USER
      - POSTGRES_PASSWORD=$DATABASE_PASSWORD
      - POSTGRES_DB=$DATABASE_NAME
    networks:
      - roodjongeren_network
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    logging:
      driver: "local"
  nginx:
    container_name: rood_nginx
    image: nginx:1.21.6-alpine
    restart: unless-stopped
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
    networks:
      - roodjongeren_network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www/:/var/www/certbot/:ro
    ports:
      - "80:80"
      - "443:443"
    logging:
      driver: "local"
  strapi:
    container_name: rood_strapi
    build: ../../backend
    image: jordimartijnvanos/roodjongeren_strapi
    restart: unless-stopped
    environment:
      - URL=$STRAPI_URL
      - HOST=$STRAPI_HOST
      - PORT=$STRAPI_PORT
      - ADMIN_JWT_SECRET=$STRAPI_ADMIN_JWT_SECRET
      - JWT_SECRET=$STRAPI_JWT_SECRET
      - API_TOKEN_SALT=$STRAPI_API_TOKEN_SALT
      - APP_KEYS=$STRAPI_APP_KEYS
      - SMTP_HOST=$STRAPI_SMTP_HOST
      - SMTP_PORT=$STRAPI_SMTP_PORT
      - SMTP_USERNAME=$STRAPI_SMTP_USERNAME
      - SMTP_PASSWORD=$STRAPI_SMTP_PASSWORD
      - DATABASE_HOST=$DATABASE_HOST
      - DATABASE_PORT=$DATABASE_PORT
      - DATABASE_NAME=$DATABASE_NAME
      - DATABASE_USER=$DATABASE_USER
      - DATABASE_PASSWORD=$DATABASE_PASSWORD
      - STRAPI_LICENSE=$STRAPI_LICENSE
    depends_on:
      - postgres
    networks:
      - roodjongeren_network
    volumes:
      - strapi_uploads_volume:/usr/src/app/public/uploads
    logging:
      driver: "local"
  nextjs:
    container_name: rood_nextjs
    build: ../../frontend
    image: jordimartijnvanos/roodjongeren_nextjs
    restart: unless-stopped
    environment:
      - BACKEND_URL=http://strapi:1337
      - NEXT_PUBLIC_BACKEND_URL=/backend
    depends_on:
      - strapi
    networks:
      - roodjongeren_network
    logging:
      driver: "local"
  umami_postgres:
    container_name: umami_postgres
    image: postgres:14.1
    restart: unless-stopped
    environment:
      - POSTGRES_USER=$UMAMI_DATABASE_USER
      - POSTGRES_PASSWORD=$UMAMI_DATABASE_PASSWORD
      - POSTGRES_DB=$UMAMI_DATABASE_USER
    networks:
      - roodjongeren_network
    ports:
      - '5433:5432'
    volumes:
      - umami_volume:/var/lib/postgresql/data
    logging:
      driver: "local"
  umami:
    container_name: umami
    build:
      context: ../umami
      args:
        - BASE_PATH=/umami
        - DATABASE_TYPE=postgresql
    restart: unless-stopped
    depends_on:
      - umami_postgres
    networks:
      - roodjongeren_network
    environment:
      # Allows us to change the name of the generated JS file
      # A custom name reduces the chance of ad blockers preventing our analytics from working
      - TRACKER_SCRIPT_NAME=stasi
      - COLLECT_API_ENDPOINT=/stasi/knock
      - DATABASE_URL=postgresql://umami:NC9h7uwqtHGSBr8f@host.docker.internal:5433/umami
      - BASE_PATH=/umami
    ports:
      - '3100:3000'
    logging:
      driver: "local"
networks:
  roodjongeren_network:
    driver: bridge
volumes:
  postgres_volume:
    name: rood_postgres_volume
    driver: local
  strapi_uploads_volume:
    name: rood_strapi_volume
    driver: local
  umami_volume:
    name: umami_postgres_volume
    driver: local